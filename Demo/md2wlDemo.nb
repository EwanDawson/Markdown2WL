(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     40692,        950]
NotebookOptionsPosition[     39076,        913]
NotebookOutlinePosition[     39412,        928]
CellTagsIndexPosition[     39369,        925]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Setup", "Section",
 CellChangeTimes->{{3.775564689818206*^9, 
  3.775564690373855*^9}},ExpressionUUID->"1f636b6e-4e3d-472a-a31a-\
bd00a0728e81"],

Cell[TextData[{
 "First Install the ",
 StyleBox["Markdown2WL` ", "Input"],
 "package. "
}], "Text",
 CellChangeTimes->{{3.781311822835169*^9, 3.781311885701049*^9}, {
  3.78131228055197*^9, 
  3.7813122820081673`*^9}},ExpressionUUID->"80d5bc9a-b360-48e4-afbf-\
c456e7aaf43e"],

Cell[BoxData[
 RowBox[{"<<", "Markdown2WL`"}]], "Input",
 CellChangeTimes->{{3.780011798558628*^9, 3.7800118040778627`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"36714754-8c15-4ea5-b10d-680c2d0837ce"],

Cell["\<\
Set the Directory to wherever a markdown file is located, in the case of this \
demo, it\[CloseCurlyQuote]s the parent folder \
\[OpenCurlyDoubleQuote]MarkdownDemo\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.781312108319435*^9, 
  3.781312245620366*^9}},ExpressionUUID->"e9f9c48e-c519-40fb-8894-\
7b99e09f19ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7813120667338753`*^9, 3.781312081910953*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a716f096-3d15-4c50-834f-23c16f0cd062"],

Cell[BoxData["\<\"/Users/faizonzaman/Documents/WolframMathematica/\
PackageDemos/MarkdownDemo\"\>"], "Output",
 CellChangeTimes->{{3.78131207431101*^9, 3.781312082453804*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"cd0a44d1-07e8-447f-9da0-f6851ac74257"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.7757681033347054`*^9, 
  3.775768104245698*^9}},ExpressionUUID->"f3dbf118-cbb7-405a-bd17-\
05a46fe72a50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "markDownToWL"}]], "Input",
 CellChangeTimes->{{3.780011909686234*^9, 3.780011910659914*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"d712551e-21f9-44da-ba34-8eaf2bb3b6e7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"markDownToWL[\\!\\(\\*\\nStyleBox[\\\"fmd\\\",\\\
nFontSlant->\\\"Italic\\\"]\\), \\\"Render\\\"-> rspec] Parses markdown file \
\\!\\(\\*\\nStyleBox[\\\"fmd\\\",\\nFontSlant->\\\"Italic\\\"]\\) into \
Wolfram Language constructs. \\\"Render\\\" option is \\\"List\\\" by \
default, others are \\\"Column\\\" and \\\"Styled\\\". \\\"Notebook\\\" is a \
planned \\\"Render\\\" option, thus not yet supported.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"markDownToWL", "[", 
                    RowBox[{"Private`fileName_String", ",", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"\<\"Render\"\>", "\[Rule]", "\<\"List\"\>"}], 
                    "}"}], "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Private`result", ",", "Private`mdToWL", ",", 
                    RowBox[{"Private`file", "=", 
                    RowBox[{"ReadList", "[", 
                    RowBox[{"Private`fileName", ",", "String"}], "]"}]}], ",",
                     "Private`footNoteLess", ",", "Private`fileForFootnotes", 
                    ",", 
                    RowBox[{"Private`$footNote", "=", 
                    RowBox[{
                    RowBox[{"Shortest", "[", 
                    RowBox[{
                    RowBox[{"Repeated", "[", 
                    RowBox[{"\<\" \"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], "]"}], 
                    "~~", "\<\"[\"\>", "~~", 
                    RowBox[{"DigitCharacter", ".."}], "~~", "\<\"]: \"\>"}], 
                    "]"}], "~~", 
                    RowBox[{"Shortest", "[", "__", "]"}]}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Private`fileForFootnotes", "=", 
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"Private`l", ",", 
                    RowBox[{"Private`l", "<>", "\<\"\\n\"\>"}]}], "]"}], "/@",
                     "#1"}], "&"}], ")"}], "[", "Private`file", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"Private`mdToWL", "=", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"Private`line", ",", 
                    RowBox[{"processLine", "[", 
                    RowBox[{"Private`line", ",", "Private`fileForFootnotes"}],
                     "]"}]}], "]"}], "/@", "Private`file"}]}], ";", 
                    RowBox[{"Private`footNoteLess", "=", 
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"Private`ll", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "Private`ll", "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringMatchQ", "[", "Private`$footNote", "]"}], 
                    "[", "Private`ll", "]"}], ",", 
                    RowBox[{"Missing", "[", "]"}], ",", "Private`ll"}], "]"}],
                     ",", "Private`ll"}], "]"}]}], "]"}], "/@", 
                    "Private`mdToWL"}], "]"}]}], ";", 
                    RowBox[{"Private`mdToWL", "=", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{"Private`footNoteLess", ",", "\<\" \"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\<\"Render\"\>", "]"}], ",", 
                    "\[IndentingNewLine]", "\<\"List\"\>", ",", 
                    "Private`mdToWL", ",", 
                    "\[IndentingNewLine]", "\<\"Column\"\>", ",", 
                    RowBox[{"Column", "[", "Private`mdToWL", "]"}], ",", 
                    "\[IndentingNewLine]", "\<\"Styled\"\>", ",", 
                    RowBox[{"TextGrid", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", "Private`mdToWL", "}"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", "\<\"Notebook\"\>", 
                    ",", "\<\"Not Yet Supported\"\>"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Markdown2WL`markDownToWL\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"markDownToWL[\\!\\(\\*\\nStyleBox[\\\"fmd\\\",\\\
nFontSlant->\\\"Italic\\\"]\\), \\\"Render\\\"-> rspec] Parses markdown file \
\\!\\(\\*\\nStyleBox[\\\"fmd\\\",\\nFontSlant->\\\"Italic\\\"]\\) into \
Wolfram Language constructs. \\\"Render\\\" option is \\\"List\\\" by \
default, others are \\\"Column\\\" and \\\"Styled\\\". \\\"Notebook\\\" is a \
planned \\\"Render\\\" option, thus not yet supported.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "markDownToWL[\!\(\*\nStyleBox[\"fmd\",\nFontSlant->\"Italic\"]\), \
\"Render\"-> rspec] Parses markdown file \!\(\*\nStyleBox[\"fmd\",\n\
FontSlant->\"Italic\"]\) into Wolfram Language constructs. \"Render\" option \
is \"List\" by default, others are \"Column\" and \"Styled\". \"Notebook\" is \
a planned \"Render\" option, thus not yet supported.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Markdown2WL`markDownToWL, {Markdown2WL`markDownToWL[
         Pattern[Private`fileName, 
          Blank[String]], 
         OptionsPattern[{"Render" -> "List"}]] :> 
       Module[{Private`result, Private`mdToWL, Private`file = 
          ReadList[Private`fileName, String], Private`footNoteLess, 
          Private`fileForFootnotes, Private`$footNote = StringExpression[
            Shortest[
             StringExpression[
              Repeated[" ", {2, Infinity}], "[", 
              Repeated[DigitCharacter], "]: "]], 
            Shortest[
             BlankSequence[]]]}, Private`fileForFootnotes = StringJoin[
            (Map[
             Function[Private`l, 
              StringJoin[Private`l, "\n"]], #]& )[Private`file]]; 
         Private`mdToWL = Map[
            Function[Private`line, 
             Markdown2WL`processLine[Private`line, Private`fileForFootnotes]],
             Private`file]; Private`footNoteLess = DeleteMissing[
            Map[
             Function[Private`ll, 
              If[
               StringQ[Private`ll], 
               If[
                StringMatchQ[Private`$footNote][Private`ll], 
                Missing[], Private`ll], Private`ll]], Private`mdToWL]]; 
         Private`mdToWL = Riffle[Private`footNoteLess, " "]; Switch[
           OptionValue["Render"], "List", Private`mdToWL, "Column", 
           Column[Private`mdToWL], "Styled", 
           TextGrid[
            Transpose[{Private`mdToWL}]], "Notebook", "Not Yet Supported"]]}],
     "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "Markdown2WL`markDownToWL"], False]]], "Output",
 CellChangeTimes->{3.780011911097581*^9, 3.780012208172401*^9, 
  3.781312048430449*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"9a3b3909-1e32-4856-a37b-5a72d2cc95de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Markdown2WL`*"}]], "Input",
 CellChangeTimes->{{3.7800119290408287`*^9, 3.780011939459558*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ec611de4-fafe-4ebc-a8bb-ad5b7e584315"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["Markdown2WL`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["Markdown2WL`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["findFootnote", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-3fc614a7-f7f0-4190-8c28-d622e4598201", {
                   "findFootnote", "Markdown2WL`"}, False},
                 ButtonNote->"Markdown2WL`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["markDownToWL", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-3fc614a7-f7f0-4190-8c28-d622e4598201", {
                   "markDownToWL", "Markdown2WL`"}, False},
                 ButtonNote->"Markdown2WL`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["processLine", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-3fc614a7-f7f0-4190-8c28-d622e4598201", {
                   "processLine", "Markdown2WL`"}, False},
                 ButtonNote->"Markdown2WL`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rowify", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-3fc614a7-f7f0-4190-8c28-d622e4598201", {
                   "rowify", "Markdown2WL`"}, False},
                 ButtonNote->"Markdown2WL`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.780011939975565*^9, 3.781312051097843*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"9937d946-0e82-4a06-89cc-b6642c979051"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"markDownToWL", "[", 
  RowBox[{"\"\<test1.md\>\"", ",", " ", 
   RowBox[{"\"\<Render\>\"", "\[Rule]", " ", "\"\<Styled\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7754071387773542`*^9, 3.7754071605801888`*^9}, {
  3.775714689128234*^9, 3.775714693018018*^9}, {3.775714859536605*^9, 
  3.775714864851898*^9}, {3.775716110635027*^9, 3.775716112057551*^9}, {
  3.7757172224108973`*^9, 3.775717223601375*^9}, {3.775717580183132*^9, 
  3.7757175815638227`*^9}, {3.77575052067829*^9, 3.775750521107959*^9}, {
  3.77575060655136*^9, 3.775750607506546*^9}, {3.775753925906406*^9, 
  3.7757539349801292`*^9}, {3.775757272733603*^9, 3.775757273181587*^9}, {
  3.7757614061348333`*^9, 3.775761408386519*^9}, {3.775765088180316*^9, 
  3.775765089029986*^9}, {3.775955680756538*^9, 3.775955681242948*^9}, {
  3.775956254149743*^9, 3.775956255902111*^9}, {3.775958491448864*^9, 
  3.775958518766109*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"344cbaa2-3cee-4d33-8995-b3d44ab4b030"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"An exhibit of Markdown\""}, "RowDefault"], "Title", 
        StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"12f1fafc-1e43-46ac-805f-5e18c6eece94"]},
    {
     TemplateBox[{
      "\"This note demonstrates some of what\"",TemplateBox[{"\" \"", 
         TemplateBox[{
          "\"Markdown\"", "http://daringfireball.net/projects/markdown/"}, 
          "HyperlinkURL"]}, "RowDefault"],"\" is capable of doing.\""},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"f247a20e-742c-483d-beca-54ed5c2383c9"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{
         "\"Note: Feel free to play with this page. Unlike regular notes, \
this doesn't automatically save itself.\""}, "RowDefault"], Italic, 
        StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"713669bd-14b4-40bf-903a-0891505e65c7"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Basic formatting\""}, "RowDefault"], "Subtitle", 
        StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"321228a5-238b-4663-ac2f-db6f526013bc"]},
    {Cell["\<\
Write Paragraphs like so. A paragraph is the basic block of Markdown. A \
paragraph is what text will turn into when there is no reason it should \
become anything else.\
\>",ExpressionUUID->"4ac5eb62-ddec-4c06-b3fd-a5af4fd15364"]},
    {Cell[" ",ExpressionUUID->"eb27ca74-329d-4f0c-9bc5-1976d19fbc1b"]},
    {
     TemplateBox[{
      "\"Blank lines separate paragraphs. Markdown supports \"",StyleBox[
        TemplateBox[{"\"italic\""}, "RowDefault"], Italic, StripOnInput -> 
        False],"\" and \"",StyleBox[
        TemplateBox[{"\"bold\""}, "RowDefault"], Bold, StripOnInput -> False],
       "\" formatting.\""},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"e805b230-98b1-4044-96df-f32f6325145a"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Lists\""}, "RowDefault"], "Subtitle", StripOnInput -> 
        False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"bafb6c48-7015-44a8-9b58-5c730794d8a2"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Ordered list\""}, "RowDefault"], "Subsection", 
        StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"4fb5b274-f935-401c-96bf-f6411004e5fe"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"1.\"", "\" \"", 
         StyleBox[
          TemplateBox[{"\"Item 1\""}, "RowDefault"], "Item", StripOnInput -> 
          False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"e1dcaf38-ce46-4ac0-b23d-3dfb2bba8796"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"2.\"", "\" \"", 
         StyleBox[
          TemplateBox[{"\"A second item\""}, "RowDefault"], "Item", 
          StripOnInput -> False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"f1c6894a-3f45-4651-b2cf-1777827177a5"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"3.\"", "\" \"", 
         StyleBox[
          TemplateBox[{"\"Number 3\""}, "RowDefault"], "Item", StripOnInput -> 
          False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"39ff9d92-1228-4c00-9ca5-669845026792"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"4.\"", "\" \"", 
         StyleBox[
          TemplateBox[{"\"\[AHat]\.85\[Sterling]\""}, "RowDefault"], "Item", 
          StripOnInput -> False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"36e7ea34-5606-4a4d-9c80-0df87a75f58b"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{
         "\"Note: the fourth item uses the Unicode character for\"", 
          TemplateBox[{"\" \"", 
            
            TemplateBox[{
             "\"Roman numeral four\"", 
              "http://www.fileformat.info/info/unicode/char/2163/index.htm"}, 
             "HyperlinkURL"]}, "RowDefault"], "\".\""}, "RowDefault"], Italic,
         StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"6daedfaf-c2af-46c5-beed-0a503eb574a1"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Unordered list\""}, "RowDefault"], "Subsection", 
        StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"4d26d60d-3399-45f6-8ce9-5c768646e7b1"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"\[Bullet] \"", 
         StyleBox[
          TemplateBox[{"\"An item\""}, "RowDefault"], "Item", StripOnInput -> 
          False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"988f5bba-2dfc-4f2a-8872-416ca3e6bf1f"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"\[Bullet] \"", 
         StyleBox[
          TemplateBox[{"\"Another item\""}, "RowDefault"], "Item", 
          StripOnInput -> False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"86168606-3261-496f-8df4-95a8d0881b39"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"\[Bullet] \"", 
         StyleBox[
          TemplateBox[{"\"Yet another item\""}, "RowDefault"], "Item", 
          StripOnInput -> False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"82148436-58b4-4c7c-981a-4f70a6bdcfba"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"\[Bullet] \"", 
         StyleBox[
          TemplateBox[{"\"And there's more...\""}, "RowDefault"], "Item", 
          StripOnInput -> False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"de27628b-2ff0-44ac-9636-39bf12b75e5c"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Paragraph modifiers\""}, "RowDefault"], "Subtitle", 
        StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"83b5a982-e3bb-4d9d-8c51-40b7f4203348"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Code block\""}, "RowDefault"], "Subsection", 
        StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"35b7fbee-6d0b-431b-a4f9-db567725a6a1"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{
         "\"\\t\"", 
          "\"Code blocks are useful for people who look at code or for \
clarity of plain text content. As you can see, it uses a fixed-width \
font.\""}, "RowDefault"], "CodeText", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"1ff7d9e3-7c13-47d1-96c4-a4dea8264352"]},
    {
     TemplateBox[{"\"You can also make \"",StyleBox[
        TemplateBox[{"\"inline code\""}, "RowDefault"], "CodeText", 
        RGBColor[0, 0, 1], StripOnInput -> False],
       "\" to add insert code block formatting anywhere.\""},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"354b9771-968c-4b6d-86d7-6f4255b47b0b"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Quote\""}, "RowDefault"], "Subsection", StripOnInput -> 
        False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"77b426de-7a41-4ea9-9ec0-e5ef77198e3b"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", 
         StyleBox[
         "\"Here is a quote. What this is should be self explanatory. Quotes \
are automatically indented when they are used.\"", 
          GrayLevel[0.5], Italic, StripOnInput -> False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"d106732a-8d06-4e5f-9f15-5b4687a390ae"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Headings\""}, "RowDefault"], "Subtitle", StripOnInput -> 
        False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"d0d040b9-fabf-42e2-a7c9-9c41092300c9"]},
    {Cell["\<\
Markdown supports six levels of headings; corresponding with the six levels \
of HTML headings. You've probably noticed them already in the page. Each \
level down uses one more hash character.\
\>",ExpressionUUID->"82759c6b-f746-4ab6-a6c3-dd0912317113"]},
    {Cell[" ",ExpressionUUID->"25654584-523c-4c80-b75b-7db86a3c4382"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Headings \"", 
          StyleBox[
           TemplateBox[{"\"can\""}, "RowDefault"], Italic, StripOnInput -> 
           False], "\" also contain \"", 
          StyleBox[
           TemplateBox[{"\"formatting\""}, "RowDefault"], Bold, StripOnInput -> 
           False], "\"\""}, "RowDefault"], "Subsection", StripOnInput -> 
        False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"3c34f984-4040-450c-86d5-4571765f21fc"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"They can even contain \"", 
          StyleBox[
           TemplateBox[{"\"inline code\""}, "RowDefault"], "CodeText", 
           RGBColor[0, 0, 1], StripOnInput -> False], "\"\""}, "RowDefault"], 
        "Subsection", StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"0c24fdec-0baa-440c-85ec-9db4f8efe2f4"]},
    {Cell["\<\
Of course, demonstrating what headings look like messes up the structure of \
the page.\
\>",ExpressionUUID->"027a14f1-776b-4d4d-86ce-631f48263f6b"]},
    {Cell[" ",ExpressionUUID->"bc6b3725-9bbb-4b8b-8ef8-0b90ba70abd1"]},
    {Cell["\<\
I don't recommend using more than three or four levels of headings here, \
because, when you're smallest heading isn't too small, and you're largest \
heading isn't too big, and you want each size up to look noticeably larger \
and more important, there aren't any other sizes to choose from.\
\>",ExpressionUUID->"65a72fb2-a997-4460-8d32-a05a4dd2c4e2"]},
    {Cell[" ",ExpressionUUID->"35512e28-63b2-4f00-ba30-a70acebf2ac9"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"URLs\""}, "RowDefault"], "Subtitle", StripOnInput -> 
        False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"3e920544-8b7e-4f6b-9d23-12b09a00072c"]},
    {Cell[
     "Add hyperlinks in the following ways:",ExpressionUUID->
      "ce319d5c-c3a4-4e70-a2df-57217045c2c9"]},
    {Cell[" ",ExpressionUUID->"022bb114-cd2a-4d86-8cc3-fa6cc2d2ca66"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"\[Bullet] \"", 
         StyleBox[
          TemplateBox[{"\"A named link to\"", 
            TemplateBox[{"\" \"", 
              
              TemplateBox[{"\"MarkItDown\"", "http://www.markitdown.net/"}, 
               "HyperlinkURL"]}, "RowDefault"], 
            "\". The easiest way to do these is to select what you want to \
make a link and hit \"", 
            StyleBox[
             TemplateBox[{"\"Ctrl+L\""}, "RowDefault"], "CodeText", 
             RGBColor[0, 0, 1], StripOnInput -> False], "\".\""}, 
           "RowDefault"], "Item", StripOnInput -> False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"25efc6be-5138-4c55-a8bd-9ce5cbf8150a"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"\[Bullet] \"", 
         StyleBox[
          TemplateBox[{"\"Another named link to\"", 
            TemplateBox[{"\" \"", 
              
              TemplateBox[{"\"MarkItDown\"", "http://www.markitdown.net/"}, 
               "HyperlinkURL"]}, "RowDefault"], "\"\""}, "RowDefault"], 
          "Item", StripOnInput -> False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"50f8e61e-4266-4944-8200-6c1f9be17b6d"]},
    {
     TemplateBox[{TemplateBox[{"\"\\t\"", "\"\[Bullet] \"", 
         StyleBox[
          TemplateBox[{"\"Sometimes you want the URL : \"", 
            TemplateBox[{
              
              TemplateBox[{
               "\"http://www.markitdown.net/\"", 
                "http://www.markitdown.net/"}, "HyperlinkURL"]}, 
             "RowDefault"], "\".\""}, "RowDefault"], "Item", StripOnInput -> 
          False]}, "RowDefault"]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"51bd73ad-451d-4470-9e33-5f37b7485bd7"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Horizontal rule\""}, "RowDefault"], "Subtitle", 
        StripOnInput -> False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"8e7d3d99-7299-46fe-be39-197544a574dd"]},
    {Cell["\<\
A horizontal rule is a dividing line drawn across the page, useful for \
separating blocks of text.\
\>",ExpressionUUID->"28118f7e-c314-4846-8cef-069d759918d0"]},
    {Cell[" ",ExpressionUUID->"4882c657-756d-49ce-b1a9-69f5aa15037d"]},
    {Cell["\<\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\
\>",ExpressionUUID->"e437035e-8bd2-4a3b-9ccc-c2dfc52b090b"]},
    {Cell[" ",ExpressionUUID->"5ea9e472-65d9-4554-bf07-aad2d5f87d7b"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Images\""}, "RowDefault"], "Subtitle", StripOnInput -> 
        False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"d5c708a9-edc8-4152-94bd-4749cdd57dbd"]},
    {Cell["\<\
Markdown can also contain images. I'll need to add something here sometime.\
\>",ExpressionUUID->"c31456b5-ea15-4e36-b033-013a3767bbf3"]},
    {Cell[" ",ExpressionUUID->"b3e74729-7713-4546-bceb-dda215fbb8f5"]},
    {
     TemplateBox[{StyleBox[
        TemplateBox[{"\"Last\""}, "RowDefault"], "Subtitle", StripOnInput -> 
        False]},
      "RowDefault"]},
    {Cell[" ",ExpressionUUID->"f5f83ce0-390f-4f61-88aa-7ecec80eac14"]},
    {
     TemplateBox[{
      "\"There's actually a lot more to Markdown than this. See the \
official\"",TemplateBox[{"\" \"", 
         TemplateBox[{
          "\"introduction\"", 
           "http://daringfireball.net/projects/markdown/basics"}, 
          "HyperlinkURL"]}, "RowDefault"],"\" and\"",TemplateBox[{"\" \"", 
         TemplateBox[{
          "\"syntax\"", "http://daringfireball.net/projects/markdown/syntax"},
           "HyperlinkURL"]}, "RowDefault"],
       "\" for more information. Be aware that this document is not using the \
official implementation, and there may be subtle differences in rendering on \
other platforms.\""},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "TextGrid"]], "Output",
 CellChangeTimes->{{3.780011885406333*^9, 3.780011894066565*^9}, 
   3.7800122165818577`*^9, 3.781312054660211*^9, 3.78131208559006*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"a04fb6fe-e123-4cbf-bfab-92312f880b65"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 730},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 150, 3, 67, "Section",ExpressionUUID->"1f636b6e-4e3d-472a-a31a-bd00a0728e81"],
Cell[733, 27, 276, 8, 35, "Text",ExpressionUUID->"80d5bc9a-b360-48e4-afbf-c456e7aaf43e"],
Cell[1012, 37, 202, 3, 30, "Input",ExpressionUUID->"36714754-8c15-4ea5-b10d-680c2d0837ce"],
Cell[1217, 42, 338, 7, 35, "Text",ExpressionUUID->"e9f9c48e-c519-40fb-8894-7b99e09f19ed"],
Cell[CellGroupData[{
Cell[1580, 53, 250, 4, 30, "Input",ExpressionUUID->"a716f096-3d15-4c50-834f-23c16f0cd062"],
Cell[1833, 59, 253, 3, 34, "Output",ExpressionUUID->"cd0a44d1-07e8-447f-9da0-f6851ac74257"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2135, 68, 155, 3, 67, "Section",ExpressionUUID->"f3dbf118-cbb7-405a-bd17-05a46fe72a50"],
Cell[CellGroupData[{
Cell[2315, 75, 199, 3, 30, "Input",ExpressionUUID->"d712551e-21f9-44da-ba34-8eaf2bb3b6e7"],
Cell[2517, 80, 16087, 362, 119, "Output",ExpressionUUID->"9a3b3909-1e32-4856-a37b-5a72d2cc95de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18641, 447, 202, 3, 30, "Input",ExpressionUUID->"ec611de4-fafe-4ebc-a8bb-ad5b7e584315"],
Cell[18846, 452, 4012, 98, 95, "Output",ExpressionUUID->"9937d946-0e82-4a06-89cc-b6642c979051"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22895, 555, 1000, 16, 30, "Input",ExpressionUUID->"344cbaa2-3cee-4d33-8995-b3d44ab4b030"],
Cell[23898, 573, 15150, 336, 1824, "Output",ExpressionUUID->"a04fb6fe-e123-4cbf-bfab-92312f880b65"]
}, Open  ]]
}, Open  ]]
}
]
*)

